\documentclass[a4paper,11pt]{article}
\usepackage{graphicx}
\usepackage{a4wide}
\usepackage[colorlinks,linkcolor=blue,citecolor=red]{hyperref}
\usepackage{natbib}
\usepackage{float}
\usepackage{tikz}
\title{Introduction to the \textbf{eventstudies} package in R}
\author{}
\begin{document}
%\VignetteIndexEntry{eventstudies: A package with functionality to do Event Studies}
%\VignetteDepends{}
%\VignetteKeywords{event studies}
%\VignettePackage{eventstudies}

\maketitle
\newpage
\SweaveOpts{engine=R,pdf=TRUE}
\section{Introduction}
This is an introduction to eventstudies, a package in R which has functionality to convert a given dataset into 
an event-time frame and to undertake further parametric/non-parametric analysis using various inference procedures.

This paper describes how this package is used and provides several examples illustrating the use of 
the functionality within this package.

\section{phys2eventtime}
phys2eventtime is a function which takes a zoo object containing input data, a data frame containing 
the date of occurance of the events and creates a data frame which is indexed according to the event
time. 

The following illustrates the use of phys2eventtime.
<<>>=
options(useFancyQuotes=FALSE)
library(eventstudies)
input.zoo.object <- structure(c(33.16, 34.0967, 35.3683, 34.46, 34.17, 35.89, 36.19,
                 37.1317, 36.7033, 37.7933, 37.8533, 285.325, 292.6,
                 290.025, 286.2, 290.075, 295.05, 289.325, 285.625,
                 293.7, 298.5, 289.05, 704.5438, 708.35, 735.8375,
                 710.625, 711.65, 731.0125, 727.575, 715.0187, 724.2,
                 713.1875, 695.1812), .Dim = c(11L, 3L), .Dimnames =
                 list( NULL, c("ITC", "Reliance", "Infosys")), index =
                 structure(c(12418, 12419, 12422, 12423, 12424, 12425,
                 12426, 12429, 12430, 12431, 12432), class = "Date"),
                 class = "zoo")
input.zoo.object
eventslist <- data.frame(unit=c("ITC","Reliance","Infosys",
                           "ITC","Reliance","Junk"),
                            when=as.Date(c(
                           "2004-01-02", "2004-01-08", "2004-01-14",
                           "2005-01-15", "2004-01-01", "2005-01-01")))

eventslist$unit <- as.character(eventslist$unit)
eventslist
@
In this example we note the following about input.zoo.object and the data frame eventslist:-
\begin{enumerate}
\item Prior to event date(in eventslist\$when) there is only 1 reading in the corresponding unit in input.zoo.object.
\item The event date is within the range of available dates for the corresponding unit(this is the ideal case).
\item After the event date there's only 1 reading.
\item The date is not within the range.
\item There is no data prior to this date.
\item Unit does not exist in input.zoo.object.
\end{enumerate}

This is exactly what the second component of phys2eventtime namely outcomes,reports. The first component of the result of phys2eventtime
is a zoo object which is the event time data frame.
<<>>==
a <- phys2eventtime(input.zoo.object, eventslist,width=0)
str(a)
a$z.e
a$outcomes

@
phys2eventtime has a third parameter namely width which allows for checking that no more than 4 consecutive missing observations
are there within the given width from the event time.

What we expect if we don't use width handling:-
<<>>==
rawres <- structure(list(z.e = structure(c(NA, NA, NA, NA, NA, NA,
  NA, NA, 33.16, 34.0967, 35.3683, 34.46, 34.17, 35.89, 36.19,
  37.1317, 36.7033, 37.7933, 37.8533, NA, NA, NA, NA, 285.325, 292.6,
  290.025, 286.2, 290.075, 295.05, 289.325, 285.625, 293.7, 298.5,
  289.05, NA, NA, NA, NA, 704.5438, 708.35, 735.8375, 710.625, 711.65,
  731.0125, 727.575, 715.0187, 724.2, 713.1875, 695.1812, NA, NA, NA,
  NA, NA, NA, NA, NA), .Dim = c(19L, 3L), .Dimnames = list( NULL,
  c("1", "2", "3")), index = -9:9, class = "zoo"), outcomes =
  structure(c(1L, 1L, 1L, 3L, 3L, 2L), .Label = c("success",
  "unitmissing", "wrongspan" ), class = "factor")), .Names = c("z.e",
  "outcomes"))
rawres
@
Check without the width handling --
<<>>==
a <- phys2eventtime(input.zoo.object, eventslist,width=0)
a
all.equal(a, rawres)
@
Check with width of 1 --
<<>>==
a <- phys2eventtime(input.zoo.object, eventslist,width=1)
a
all.equal(a, rawres)
@
But when we go to width=2, column 1 and 3 drop off because they have
only 1 obs before and after the event date respectively.

<<>>==
a <- phys2eventtime(input.zoo.object, eventslist,width=2)
a
all.equal(a, structure(list(z.e = structure(c(NA, NA, NA, NA, 285.325,
                              292.6, 290.025, 286.2, 290.075, 295.05,
                              289.325, 285.625, 293.7, 298.5, 289.05,
                              NA, NA, NA, NA), index = -9:9, class =
                              "zoo"), outcomes = structure(c(3L, 1L,
                              3L, 4L, 4L, 2L), .Label = c("success",
                              "unitmissing", "wdatamissing",
                              "wrongspan"), class = "factor")), .Names
                              = c("z.e", "outcomes" )))
@
\section{inference.Ecar}
Once we have an event time frame returned by phys2eventtime we may use inference.Ecar to do 
bootstrap inference for the main graph of the event study. This is illustrated in the following example.
<<>>==
library(xts)
load(paste(system.file(package="eventstudies"),"data","inr.rda",sep="/"))
inr.returns<-diff(log(inr))[-1]
eventslist<-data.frame(unit=rep("inr",10),
                       when=as.Date(c(
                         "2010-04-20","2010-07-02","2010-07-27",
                         "2010-09-16","2010-11-02","2011-01-25",
                         "2011-03-17","2011-05-03","2011-06-16",
                         "2011-07-26")))
event.time.data<-phys2eventtime(inr.returns,eventslist,width=10)
w<-window(event.time.data$z.e,start=-10,end=10)
inference.Ecar(w)
@

\section{identifyextremeevents}
% Conceptual framework
\subsection{Conceptual framework}
This function of the package identifies extreme event and does data
analysis. The upper tail and lower tail values are defined as extreme
events at certain probability. 

There are two further issues to consider. First, matters are
complicated by the fact that extreme (tail) values may cluster: for
example, there may be two or three consecutive days of very high or
very low daily returns, or these extremes may occur in two out of
three days. If the extreme values are all in the same tail of the
distribution, it might make sense to consider the cluster of extreme
values as a single event. 

We approach this problem through two paths. The data has following
events: clustered, unclustered and mixed clusters. For simplicity, we
remove all the mixed clusters and deal with the rest. Unclustered or
uncontaminated events are those where there is no other event within
the event window. Clustered events are defined by fusing all
consecutive extreme events, of the same direction, into a single
event. In event time, date +1 is then the first day after the run of
extreme events, and date -1 is the last day prior to the start of the
run. This strategy avoids losing observations of some of the most  
important crises, which have clustered extreme events in the same
direction. 

% Example for understanding
\subsection{Usage}
This function does extreme event analysis on the returns of the
data. Function has following two arguments:
\begin{enumerate}
\item \textit{input}: Data on which extreme event analysis is done. Note:
  \textit{input} should be in returns format.  
\item \textit{prob.value}: It is the tail value on basis of which the
  extreme events are defined. For eg: \textit{prob.value} of 5 will consider
  5\% tail on both sides.
\end{enumerate}
<<>>==
data(sp500)
input <- diff(log(sp500))*100
output <- identifyextremeevents(input, prob.value=5)
@

\subsection{Output}
Output is in list format. Primarily it consists of three lists,
summary statistics for complete data-set, extreme event analysis for
lower tail and extreme event analysis for upper tail. Further, these
lower tail and upper tail list objects consists of 5 more list objects with
following output:
\begin{enumerate}
\item Extreme events dataset
\item Distribution of clustered and unclustered
\item Run length distribution
\item Quantile values of extreme events
\item Yearly distribution of extreme events
\end{enumerate}
The complete set of analysis is done on the returns of S\&P500 and
these results are in tandem with Table 1,2,3,4 and 5 of Patnaik, Shah
and Singh (2013). 

\subsubsection{Summary statistics}
Here we have data summary for the complete data-set which shows
minimum, 5\%, 25\%, median, mean, 75\%, 95\%, maximum, standard
deviation (sd), inter-quartile range (IQR) and number of
observations. The output is shown below:
<<>>==
output$data.summary
@ 
\subsubsection{Extreme events dataset} 
The output for upper tail and lower tail are in the same format as
mentioned above. The data-set is an time series object which has 2
columns. The first column is \textit{event.series} column which has
returns for extreme events and the second column is
\textit{cluster.pattern} which signifies the number of consecutive
days in the cluster. So, here we just show results for lower tail.
<<>>=
output$lower.tail$data
@

\subsubsection{Distribution of clustered and clustered events}
In the analysis we have clustered, unclustered and mixed clusters. We
remove the mixed clusters and study the rest of the clusters by fusing
them. Here we show, number of clustered and unclustered data used in
the analysis. The \textit{removed.clstr} refers to mixed cluster which
are removed and not used in the analysis.\textit{Tot.used} represents
total number of extreme events used for the analysis which is sum of
\textit{unclstr} (unclustered events) and \textit{used.clstr} (Used
clustered events). \textit{Tot}
are the total number of extreme events in the data-set.
<<>>=
output$lower.tail$extreme.event.distribution
@ 

\subsubsection{Run length distribution of clusters}
Clusters used in the analysis are defined as consecutive extreme
events. Run length shows total number of clusters with \textit{n} consecutive
days. In the example below we have 3 clusters with  \textit{two}
consecutive events and 0 clusters with \textit{three} consecutive
events. 
<<>>=
output$lower.tail$runlength
@ 

\subsubsection{Extreme event quantile values}
Quantile values show 0\%, 25\%, median, 75\%,100\% and mean values for
the extreme events data.
<<>>=
output$lower.tail$quantile.values
@ 

\subsubsection{Yearly distribution of extreme events}
This table shows the yearly wise distribution and
the median value for extreme events data.
<<>>=
output$lower.tail$yearly.extreme.event
@ 
\end{document}
