\documentclass[a4paper,11pt]{article}
\usepackage{graphicx}
\usepackage{a4wide}
\usepackage[colorlinks,linkcolor=blue,citecolor=red]{hyperref}
\usepackage{natbib}
\usepackage{float}
\usepackage{tikz}
\usepackage{parskip}
\usepackage{amsmath}
\title{Introduction to the \textbf{eventstudies} package in R}
\author{Ajay Shah, Vimal Balasubramaniam and Vikram Bahure}
\begin{document}
%\VignetteIndexEntry{eventstudies: A package with functionality to do Event Studies}
%\VignetteDepends{}
%\VignetteKeywords{event studies}
%\VignettePackage{eventstudies}
\maketitle
\begin{abstract}
The structure of the package and its implementation of event study
methodology is explained in this paper. In addition to converting
physical dates to event time frame, functions for re-indexing the
event time returns and bootstrap inference estimation. The methods and
functions are elucidated by employing data-set of SENSEX firms. 
\end{abstract}

\SweaveOpts{engine=R,pdf=TRUE}

\section{Introduction}

Event study methodology has been primarily used to evaluate the impact
of specific events on the value of the firm. The typical procedure for
conducting an event study involves \citep{MacKinlay}
\begin{itemize}
\item Defining the event of interest and the event window. The event
  window is larger than the specific period of
  interest. % Generally the event
  % period itself is not included in the estimation period to prevent
  % the event from influencing the normal performance model parameter
  % estimates.
 \item Determining the selection criteria for the inclusion of firms,
   in the study
 \item Determining a measure of abnormal returns, the most common
   being the \textit{constant mean return model} and the
   \textit{market model}. This is important to disentangle the effects
   on stock prices of information that is specific to the firm under
   question (e.g. stock split annoucement) and information that is
   likely to affect stock prices marketwide (e.g. interest rates)
 \item Analysis of firm returns around the event date  
\end{itemize}

The \textbf{eventstudies} package brings together the various aspects
of an event study analysis in one library. It provides for functions
to calculate returns, transform data into event-time, and conduct
inference on the unit of interest. All functions in this package are
implemented in the R system for statistical computing. The package,
and R are available at no cost under the terms of the general public
license (GPL) from the comprehensive R archive network (CRAN,
\texttt{http://CRAN.R-project.org}).

This paper is organised as follows. A skeletal event study model is
presented in Section \ref{s::model}. Section \ref{s:approach}
discusses the software approach used in this package. The
functionalities of the package are discussed in Section
\ref{s:package-func}: the construction of the data-set in section
\ref{ss:construction}, estimation in section \ref{ss:estimation} and
inference in section \ref{ss:inference}. Section \ref{s:conclusion}
conclues the paper.

\section{Skeletal event study model} \label{s:model}

In this section, we present a model to evaluate the impact of stock
splits on returns. 

Let day-0 identify the stock split date under scrutiny and let days
t = ... -3,-2,-1 represent trading days leading up to the event. If
the return on the firm with the stock split $R_o$ is statistically
large compared to returns on previous dates, we may conclude that the
stock split event had a significant price impact. 

To disentangle the impact of the stock split on the returns of the
firm from general market-wide information, we use the market-model to
adjust the event-date return, thus removing the influence of market
information. 

The market model is calculated as follows:

\[ R_t = a + b RM_t + e_t \]

The firm-specific return $e_t$ is unrelated to the overall market and
has an expected value of zero.  Hence, the expected event date return
conditional on the event date market return is

\[ E(R_0|RM_0) = a + b RM_0 \]

The abnormal return $A_0$ is simply the day-zero firm-specific return
$e_0$:

\[ A_0 = R_0- E(R_0|RM_0) = R_0 - a - b RM_0 \]

A series of abnormal returns from previous periods are also calculated
for comparison, and to determine statistical signficance. 

\[ A_t = R_t- E(R_t|RM_t) = R_t - a - b RM_t \] 

The event date abnormal return $A_0$ is then assessed for statistical
significance relative to the distribution of abnormal returns $A_t$ in
the control period. A common assumption used to formulate tests of
statistical significance is that abnormal returns are normally
distributed.

\section{Software approach} \label{s:approach}
The package offers the following functionalities:
\begin{enumerate}
 \item Models for calculating returns. These include:
  \begin{itemize}
   \item \texttt{excessReturn}: estimation of excess return i.e. $R_j -
     R_m$ where $R_j$ is the return of firm $j$ and $R_m$ is the market
     return.
   \item \texttt{marketResidual}: estimation of market residual after
     extracting market returns from firm returns.
   \item \texttt{AMM}: estimation of market residual after extracting
     market returns and currency returns from firm returns. 
  \end{itemize}
 \item Coverting the data-set to an event frame. This requires:
   \begin{itemize}
   \item A time series object of stock price returns
   \item Event dates object with two columns, \textit{unit} and
     \textit{when}, the date of occurrence of the event.
   \end{itemize}
 \item Procedures for inference. These include:
   \begin{itemize}
   \item Bootstrapping
   \item Wilcoxon signed rank test  
   \end{itemize}
\end{enumerate}


The first argument of the first two models is the \texttt{data.oject}
which is a time-series of stock returns. The second argument is
\texttt{market.name}, a column name indicating market returns. 

The output from these two models is another time-series object which
is used for converting to event time.


\section{Example: Performing Eventstudy analysis} 
\label{s:example}

We demonstrate the package with a study of the impact of stock splits
on the stock price of the firm. The data-set consist of the returns
series of the thirty index companies, as of 2013, of the Bombay Stock
Exchange (BSE), from 2001 to 2013.  We have stock split dates for each
firm from 2000 onwards.

\subsection{Basic data files}

We first create a \textit{zoo} object for stock price returns for the
thirty firms. For event dates, a data frame with two columns
\textit{unit} and \textit{when} is formed. \textit{unit} has name of
the response series (firm name as in column name of time series
object) along with event date in \textit{when}. \textit{unit} should
be in \textit{character} format and \textit{when} in \textit{Date}
format.

<<>>=
library(eventstudies)
data(StockPriceReturns)
str(StockPriceReturns)
data(SplitDates)
head(SplitDates)
@ 

\subsection{Calculating returns}

\subsection{Using the market model}
<<>>=
data(StockPriceReturns)
# Excess return
er.result <- excessReturn(market.name="nifty",
                          data.object=StockPriceReturns)


@ 

<<>>=
# Extracting market residual
mm.result <- marketResidual(data.object=StockPriceReturns, market.name="nifty")
@ 

%AMM model
<<>>=
# Create RHS before running AMM()
data("y3c3")
NIFTY_INDEX <- y3c3$NIFTY_INDEX
INRUSD <- y3c3$INRUSD
Company_A <- y3c3$Company_A
Company_B <- y3c3$Company_B
Company_C <- y3c3$Company_C
regressand <- cbind(Company_A,Company_B,Company_C)

## AMM output
## With no structural break dates: dates=NULL
result1 <- AMM(amm.type="all",rj=y3c3$Company_A,
           verbose=TRUE,
           dates= NULL,
           rM1=y3c3$NIFTY_INDEX, others=y3c3$INRUSD,
           switch.to.innov=TRUE, rM1purge=TRUE, nlags=1)



## With AMM different structural periods  
result2 <- AMM(amm.type="all",rj=Company_A,
               nlags=NA,
               verbose=TRUE,
               dates= as.Date(c("2005-01-15","2006-01-07","2007-01-06",
                 "2008-01-05","2009-01-03")),
               rM1=NIFTY_INDEX, others=INRUSD,
               switch.to.innov=TRUE, rM1purge=TRUE, nlags=1)

@ 



\subsection{Converting physical dates to event frame}
The first step towards event study analysis is to convert the physical
dates to event time frame.  The event date and the returns on that
date are indexed to 0. Post-event dates are indexed to positive, and
pre-event dates as negative. This is done using the
\textit{phys2eventtime} function.

The output for \textit{phys2eventtime} is a list. The first element of
a list is a time series object which is converted to event 
time and the second element is \textit{outcomes} which shows if there
was any \textit{NA} in the dataset. If the outcome is \textit{success}
then all is well in the given window as specified by the
width. It gives \textit{wdatamissing} if there are too many
\textit{NAs} within the crucial event 
window or \textit{wrongspan} if the event date is not placed within 
the span of data for the unit or \textit{unitmissing} if a unit named
in events is not in \textit{z}.

<<>>=
es <- phys2eventtime(z=StockPriceReturns, events=SplitDates, width=10)
str(es)
head(es$outcomes)
es.w <- window(es$z.e, start=-10, end=10)
SplitDates[1:3,]
StockPriceReturns[SplitDates[1,2],SplitDates[1,1]]
StockPriceReturns[SplitDates[2,2],SplitDates[2,1]]
StockPriceReturns[SplitDates[3,2],SplitDates[3,1]]
es.w[,1:3]
@ 

In this example, es.w contains the returns in event-time form for all
the stocks. In this you only get variables for whom all data is
available. 

\subsection{Remapping event frame}
In event study analysis the variable of interest is cumulative
returns. The \textit{remap.cumsum} function is used to
convert the returns to cumulative returns.
<<>>=
es.cs <- remap.cumsum(es.w,is.pc=FALSE,base=0)
es.cs[,1:3]
@ 

\subsection{Inference procedures}
\subsubsection{Bootstrap inference}
After converting to event frame and estimating the interest variable,
we need to check the stability of the result and derive other
estimates like standard errors and confidence intervals. For this,
we generate the sampling distribution for the estimate using bootstrap
inference. A detailed explanation of the methodology is presented in
Patnaik, Shah and Singh (2013).
This specific approach used here is based on
\citet{davison1986efficient}. The \textit{inference.bootstrap} function
does the bootstrap to generate distribution of $\bar{CR}$. The
bootstrap generates confidence interval at 2.5\% and 97.5\% for the
estimate. 

<<>>=
result <- inference.bootstrap(es.w=es.cs, to.plot=TRUE)
@ 
\begin{figure}[t]
  \begin{center}
    \caption{Stock splits event and response of respective stock
      returns: Bootstrap CI}
    \setkeys{Gin}{width=0.8\linewidth}
    \setkeys{Gin}{height=0.8\linewidth}
<<fig=TRUE,echo=FALSE>>=
  result <- inference.bootstrap(es.w=es.cs, to.plot=TRUE)
@
\end{center}
\label{fig:one}
\end{figure}

\subsubsection{Wilcoxon signed rank tests}
It is a non-parametric inference test to compute confidence interval.
<<>>=
result <- inference.wilcox(es.w=es.cs, to.plot=TRUE)
@ 
\begin{figure}[t]
  \begin{center}
    \caption{Stock splits event and response of respective stock
      returns: Wilcoxon CI}
    \setkeys{Gin}{width=0.8\linewidth}
    \setkeys{Gin}{height=0.8\linewidth}
<<fig=TRUE,echo=FALSE>>=
  result <- inference.wilcox(es.w=es.cs, to.plot=TRUE)
@
\end{center}
\label{fig:two}
\end{figure}

\subsection{General eventstudy function}
This function is wrapper around all the internal functions. This
function gives an option to compute returns like excess return, market
residual and augmented market model. It also gives you an option to
choose inference procedure from bootstrap and wilcoxon to generate
confidence interval.

<<>>=
## Event study without adjustment
es.na <- eventstudy(inputData = StockPriceReturns, eventList = SplitDates, 
                    width = 10, to.remap = TRUE, remap = "cumsum", 
                    to.plot = TRUE, inference = TRUE, 
                    inference.strategy = "wilcoxon",
                    type = "None")

## Event study using market residual and bootstrap
es.mm <- eventstudy(inputData = StockPriceReturns, eventList = SplitDates, 
                    width = 10, to.remap = TRUE, remap = "cumsum", 
                    to.plot = TRUE, inference = TRUE, 
                    inference.strategy = "bootstrap",
                    type = "marketResidual", market.name = "nifty")

## Event study using excess return and bootstrap
es.er <- eventstudy(inputData = StockPriceReturns, eventList = SplitDates, 
                    width = 10, to.remap = TRUE, remap = "cumsum", 
                    to.plot = TRUE, inference = TRUE, 
                    inference.strategy = "bootstrap",
                    type = "excessReturn", market.name = "nifty")

## Event study using augmented market model (AMM) and bootstrap
data(inr)
inrusd <- zoo(diff(log(inr))*100,index(inr))
all.data <- merge(StockPriceReturns,inrusd, all = FALSE)
all.data <- window(all.data, start="2004-01-01")
all.data <- all.data[-which(is.na(all.data$nifty)),]
cn.names <- which(colnames(all.data)%in%c("nifty","inr"))
stock.data <- all.data[,-cn.names]

es.amm <- eventstudy(inputData = stock.data, 
                     eventList = SplitDates, 
                     width = 10, to.remap = TRUE, remap = "cumsum", 
                     to.plot = TRUE, inference = TRUE, 
                     inference.strategy = "bootstrap",
                     type = "AMM", amm.type="residual",
                     rM1=all.data$nifty, others=all.data$inr,
                     nlags=1, verbose=TRUE,
                     dates= NULL,
                     switch.to.innov=TRUE, rM1purge=TRUE, nlags=1)

@ 


\section{Computational details}
The package code is purely written in R. It has dependencies to zoo
(\href{http://cran.r-project.org/web/packages/zoo/index.html}{Zeileis
  2012}) and boot
(\href{http://cran.r-project.org/web/packages/boot/index.html}{Ripley
  2013}).  R itself as well as these packages can be obtained from \href{http://CRAN.R-project.org/}{CRAN}.
%\section{Acknowledgments}

%\newpage
\bibliographystyle{jss}
\bibliography{eventstudies}

\end{document}
